[
	{
		"inputs": [
			{
				"components": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "icoOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "currency",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "icoAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "presaleRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "startTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidityAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "refralRate",
						"type": "uint256"
					}
				],
				"internalType": "struct ico_contract.icoData",
				"name": "_icoData",
				"type": "tuple"
			},
			{
				"components": [
					{
						"internalType": "string",
						"name": "website",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "logo",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "youtube",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "info",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "facebook",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "twitter",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "github",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "telegram",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "reddit",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "instagram",
						"type": "string"
					}
				],
				"internalType": "struct ico_contract.icoUrl",
				"name": "_url",
				"type": "tuple"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"internalType": "string",
						"name": "website",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "logo",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "youtube",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "info",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "facebook",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "twitter",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "github",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "telegram",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "reddit",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "instagram",
						"type": "string"
					}
				],
				"internalType": "struct ico_contract.icoUrl",
				"name": "_url",
				"type": "tuple"
			}
		],
		"name": "UpdateUrl",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "_auditUrl",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_kycUrl",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_doxxUrl",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_safuUrl",
				"type": "string"
			}
		],
		"name": "addBadge",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "cancelICO",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_startTimestamp",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_endTimestamp",
				"type": "uint256"
			}
		],
		"name": "changeIcoTime",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "claimFund",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "claimToken",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_amount",
				"type": "uint256"
			}
		],
		"name": "contribute",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_refralAddress",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_amount",
				"type": "uint256"
			}
		],
		"name": "contributeWithReferal",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "contributers",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "emergencyWithdrawl",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "finalizeICO",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getBadge",
		"outputs": [
			{
				"components": [
					{
						"internalType": "string",
						"name": "auditedUrl",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "kycUrl",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "safuUrl",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "doxxdUrl",
						"type": "string"
					}
				],
				"internalType": "struct ico_contract.kycData",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getICOData",
		"outputs": [
			{
				"components": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "icoOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "currency",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "icoAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "presaleRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "startTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidityAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "refralRate",
						"type": "uint256"
					}
				],
				"internalType": "struct ico_contract.icoData",
				"name": "",
				"type": "tuple"
			},
			{
				"components": [
					{
						"internalType": "string",
						"name": "website",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "logo",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "youtube",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "info",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "facebook",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "twitter",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "github",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "telegram",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "reddit",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "instagram",
						"type": "string"
					}
				],
				"internalType": "struct ico_contract.icoUrl",
				"name": "",
				"type": "tuple"
			},
			{
				"components": [
					{
						"internalType": "string",
						"name": "auditedUrl",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "kycUrl",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "safuUrl",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "doxxdUrl",
						"type": "string"
					}
				],
				"internalType": "struct ico_contract.kycData",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "ico",
		"outputs": [
			{
				"internalType": "address",
				"name": "tokenAddress",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "icoOwner",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "currency",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "icoAmount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "presaleRate",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "startTimestamp",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "endTimestamp",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "liquidityAmount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "refralRate",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "icoCurrency",
		"outputs": [
			{
				"internalType": "contract IERC20",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "isOwner",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "kyc",
		"outputs": [
			{
				"internalType": "string",
				"name": "auditedUrl",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "kycUrl",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "safuUrl",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "doxxdUrl",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "referals",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "soldOut",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "token",
		"outputs": [
			{
				"internalType": "contract IERC20",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "url",
		"outputs": [
			{
				"internalType": "string",
				"name": "website",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "logo",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "youtube",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "info",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "facebook",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "twitter",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "github",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "telegram",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "reddit",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "instagram",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]